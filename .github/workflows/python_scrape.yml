name: Python-Scrape recent snowfall

on:
  #repository_dispatch:
  #  types: [trigger-push-to-gcp]
  #workflow_dispatch:
  push:
  #  branches:
  #    - main  # Trigger on pushes to the main branch
jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y gdal-bin libgdal-dev
        
      #- name: Install system dependencies
      #  run: |
      #      sudo apt-get update
      #      sudo apt-get install -y gdal-bin libgdal-dev
      #      sudo apt-get install -y libgdal-dev=3.10.1-1 # Ensure you get the correct version

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools wheel
          pip install gdal==3.8.4.*  # This will install the Python bindings for GDAL
          #pip install pygdal=="$(gdal-config --version).*"
          #pip install pygdal==3.7.2.*
          pip install -r requirements.txt
          
      - name: Verify GDAL Installation
        run: |
          gdalinfo --version
          python3 -c "import sys; print(sys.path)"
          #python3 -c "from osgeo import gdal; print(gdal.VersionInfo())"
          python -c "import osgeo; print(osgeo.__version__)"
          
      - name: Set up GDAL environment variables
        run: |
          export GDAL_DATA=$(gdal-config --datadir)
          export LD_LIBRARY_PATH=$(gdal-config --libdir):$LD_LIBRARY_PATH
          echo "GDAL_DATA=$GDAL_DATA"
          echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH"
        shell: bash

      - name: Run script
        run: python PolygonizeRaster.py
        
      - name: Commit results
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add --all
          git commit -m "Latest data: $(date)" || exit 0
          git push 
        env:
          REPO_KEY: ${{secrets.GITHUB_TOKEN}}
          username: github-actions