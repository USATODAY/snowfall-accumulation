name: Process with Mapshaper (all)

on:
  repository_dispatch:
    types: [trigger-mapshaper-all]
  workflow_dispatch:
  #push:
  #  branches:
  #    - main  # Run on pushes to the main branch

jobs:
  build:
    runs-on: ubuntu-latest  # Or macos-latest if you prefer

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Set the version of Node.js

      - name: Install Mapshaper
        run: npm install -g mapshaper  # Install Mapshaper globally

      - name: Run Mapshaper-24h
        run: mapshaper outputs/24h/24h_inches_snow_accumulation_latest_full.json -o precision=0.1 outputs/24h/24h_inches_snow_accumulation_latest.json  # Run your Mapshaper command directly
        
      - name: Run Mapshaper-48h
        run: mapshaper outputs/48h/48h_inches_snow_accumulation_latest_full.json -o precision=0.1 outputs/48h/48h_inches_snow_accumulation_latest.json  # Run your Mapshaper command directly

      - name: Run Mapshaper-72h
        run: mapshaper outputs/72h/72h_inches_snow_accumulation_latest_full.json -o precision=0.1 outputs/72h/72h_inches_snow_accumulation_latest.json  # Run your Mapshaper command directly

      - name: Run Mapshaper-season
        run: mapshaper outputs/season/season_inches_snow_accumulation_latest_full.json -o precision=0.1 outputs/season/season_inches_snow_accumulation_latest.json  # Run your Mapshaper command directly

      - name: Commit results
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add --all
          git commit -m "Latest data: $(date)" || exit 0
          git push 
        env:
          REPO_KEY: ${{secrets.GITHUB_TOKEN}}
          username: github-actions

      - name: Trigger push to Google Cloud
        if: success()
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_GHA_PAT }}
          repository: ${{ github.repository }}
          event-type: trigger-cleanup
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'